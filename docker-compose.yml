# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  postgres:
    container_name: ${PROJECT_NAME}-postgres
    image: postgres:alpine
    volumes:
      - ./backend/sql/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./backend/sql/data.sql:/docker-entrypoint-initdb.d/2-data.sql
      - pg_data:/var/lib/postgresql/pg_data
    env_file:
      - .env
    ports:
      - "5432:5432"
      - "9920:9920"
    restart: always # ignored when deploying a stack in swarm mode or kubernetes
    deploy: # ignored by docker-compose
      restart_policy:
        condition: on-failure

  backend:
    container_name: ${PROJECT_NAME}-backend
  # App Service
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
     - 8080:8080
    restart: unless-stopped
    depends_on: 
      - redis # This service depends on redis. Start that first.
    environment: # Pass environment variables to the service
      REDIS_URL: redis:6379    
    env_file:
      - .env

  # Redis Service   
  redis:
    container_name: ${PROJECT_NAME}-redis
    image: "redis:alpine" # Use a public Redis image to build the redis service    
    restart: unless-stopped
    env_file:
      - .env

volumes:
  pg_data:
